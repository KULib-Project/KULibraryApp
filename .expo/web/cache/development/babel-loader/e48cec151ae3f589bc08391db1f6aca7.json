{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = LoginScreen;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar WebBrowser = _interopRequireWildcard(require(\"expo-web-browser\"));\n\nvar Google = _interopRequireWildcard(require(\"expo-auth-session/providers/google\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _jsxFileName = \"D:\\\\root\\\\repos\\\\summer\\\\KULibraryApp_FE\\\\screens\\\\LoginScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nWebBrowser.maybeCompleteAuthSession();\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      gUser = _useState2[0],\n      setGUser = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      reqError = _useState4[0],\n      setReqError = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      isLoding = _useState6[0],\n      setIsLoding = _useState6[1];\n\n  var _Google$useAuthReques = Google.useAuthRequest({\n    expoClientId: '44328153699-64ovtsdos7gffuc2gnbtmqahrbeav3hj.apps.googleusercontent.com',\n    iosClientId: '44328153699-sb96g02ro9a69pe4gbu4i9kag4eq6qoq.apps.googleusercontent.com',\n    androidClientId: '44328153699-ogd9nkqs5fg9048r1o8uo0u8hut342m9.apps.googleusercontent.com',\n    webClientId: '44328153699-dlqmkgbrdujcslh18r811ta2lemldmje.apps.googleusercontent.com',\n    scopes: ['profile', 'email']\n  }),\n      _Google$useAuthReques2 = (0, _slicedToArray2.default)(_Google$useAuthReques, 3),\n      request = _Google$useAuthReques2[0],\n      response = _Google$useAuthReques2[1],\n      promptAsync = _Google$useAuthReques2[2];\n\n  (0, _react.useEffect)(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var authentication = response.authentication;\n      getGoogleUser(authentication.accessToken);\n      giveGoogleUser(authentication.accessToken);\n      console.log(authentication.accessToken);\n    }\n  }, [response]);\n\n  var getGoogleUser = function getGoogleUser(accessToken) {\n    var gUserReq;\n    return _regenerator.default.async(function getGoogleUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_axios.default.get('https://www.googleapis.com/oauth2/v2/userinfo', {\n              headers: {\n                Authorization: \"Bearer \" + accessToken\n              }\n            }));\n\n          case 3:\n            gUserReq = _context.sent;\n            console.log(gUserReq.data);\n            setGUser(gUserReq.data);\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('GoogleUserReq error: ', _context.t0.response.data);\n            setReqError(_context.t0.response.data);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var giveGoogleUser = function giveGoogleUser(accessToken) {\n    var giveUser;\n    return _regenerator.default.async(function giveGoogleUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(_axios.default.post('https://f7479681-8640-4929-b771-f41103825403.mock.pstmn.io/userData', {\n              \"accessToken\": accessToken,\n              \"userInfo\": gUser\n            }).then(function (response) {\n              if (response.status == 201) {\n                console.log('11111');\n\n                _asyncStorage.default.setItem('User', JSON.stringify({\n                  id: response.data.id,\n                  email: gUser.email,\n                  picture: gUser.picture\n                }), function () {\n                  console.log('유저정보 저장 완료');\n                  console.log(gUser.id);\n                });\n\n                navigation.replace('Home');\n              } else {\n                _asyncStorage.default.setItem('user_id', JSON.stringify(gUser.userInfo['id']), function () {\n                  console.log('유저정보 저장 완료');\n                });\n\n                navigation.replace('Home');\n              }\n            }).catch(console.error).finally(function () {\n              return setIsLoding(false);\n            }));\n\n          case 2:\n            giveUser = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Button, {\n    color: \"#900124\",\n    disabled: !request,\n    title: \"Login with Google\",\n    onPress: function onPress() {\n      return promptAsync();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_expoStatusBar.StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["WebBrowser","maybeCompleteAuthSession","LoginScreen","navigation","useState","gUser","setGUser","reqError","setReqError","isLoding","setIsLoding","Google","useAuthRequest","expoClientId","iosClientId","androidClientId","webClientId","scopes","request","response","promptAsync","useEffect","type","authentication","getGoogleUser","accessToken","giveGoogleUser","console","log","axios","get","headers","Authorization","gUserReq","data","post","then","status","AsyncStorage","setItem","JSON","stringify","id","email","picture","replace","userInfo","catch","error","finally","giveUser","styles","container","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems"],"sources":["D:/root/repos/summer/KULibraryApp_FE/screens/LoginScreen.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { StyleSheet,Styles, Text, View, Button,Alert } from 'react-native';\r\nimport axios from 'axios';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function LoginScreen ({navigation}) {\r\n\r\n  const [gUser, setGUser] = useState('');\r\n  const [reqError, setReqError] = useState('');\r\n  const [isLoding,setIsLoding]=useState(false);\r\n\r\n  //https://console.cloud.google.com/ 에서 api 설정을 하고, 클라이언트 id를 발급받아 사용\r\n  //https://docs.expo.dev/versions/latest/sdk/auth-session/ 사용법은 이 링크 참고\r\n  const [request, response, promptAsync] = Google.useAuthRequest({\r\n    expoClientId: '44328153699-64ovtsdos7gffuc2gnbtmqahrbeav3hj.apps.googleusercontent.com',\r\n    iosClientId: '44328153699-sb96g02ro9a69pe4gbu4i9kag4eq6qoq.apps.googleusercontent.com',\r\n    androidClientId: '44328153699-ogd9nkqs5fg9048r1o8uo0u8hut342m9.apps.googleusercontent.com',\r\n    webClientId: '44328153699-dlqmkgbrdujcslh18r811ta2lemldmje.apps.googleusercontent.com',\r\n    scopes: ['profile', 'email'],\r\n  });\r\n  \r\n useEffect(() => {\r\n        if (response?.type === 'success') {\r\n            const { authentication } = response;\r\n\r\n            getGoogleUser(authentication.accessToken)\r\n            giveGoogleUser(authentication.accessToken)\r\n            console.log(authentication.accessToken)\r\n            \r\n        }\r\n    }, [response]);\r\n   \r\n    //구글 로그인 api에 정보 요청\r\n    const getGoogleUser = async (accessToken) => {\r\n        try{\r\n            let gUserReq =await axios.get('https://www.googleapis.com/oauth2/v2/userinfo',\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${accessToken}`\r\n                    }\r\n                }\r\n            )\r\n            \r\n            console.log(gUserReq.data);\r\n            setGUser(gUserReq.data);\r\n            \r\n        }\r\n        catch(error){\r\n            console.log('GoogleUserReq error: ', error.response.data);\r\n            setReqError(error.response.data);\r\n        }\r\n        \r\n    }\r\n\r\n   //https://library-2022.herokuapp.com/auth/google/user -> db 링크\r\n  //https://f7479681-8640-4929-b771-f41103825403.mock.pstmn.io/userData -> test mockup 링크\r\nconst giveGoogleUser = async (accessToken) => {\r\n        const giveUser = await axios.post('https://f7479681-8640-4929-b771-f41103825403.mock.pstmn.io/userData', {\r\n            \"accessToken\": accessToken,\r\n            \"userInfo\": gUser\r\n        }).then(function(response){\r\n            if (response.status == 201) {\r\n              ///데이터베이스에 있을 경우 ( 기존 회원 )\r\n              console.log('11111');\r\n              AsyncStorage.setItem(\r\n                'User',\r\n                JSON.stringify({\r\n                  id: response.data.id,\r\n                  email: gUser.email,\r\n                  picture: gUser.picture,\r\n                }),\r\n                () => {\r\n                  console.log('유저정보 저장 완료');\r\n                  console.log(gUser.id);\r\n                },\r\n              );\r\n              navigation.replace('Home');\r\n            } else { ///데이터베이스에 없을 경우 ( 신규 회원 )\r\n              AsyncStorage.setItem(\r\n                //유저 정보를 로컬에 저장하는 역할인데..수정 필요.\r\n                'user_id',\r\n                JSON.stringify(gUser.userInfo['id']),\r\n                () => {\r\n                  console.log('유저정보 저장 완료');\r\n                },\r\n              );\r\n              navigation.replace('Home');\r\n            }\r\n          })\r\n        .catch(console.error)\r\n        .finally(()=>setIsLoding(false));\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n           \r\n            {/* 간단한 로그인 버튼 */}\r\n            <Button color=\"#900124\"\r\n                disabled={!request}\r\n                title=\"Login with Google\"\r\n                onPress={() => promptAsync()} \r\n            \r\n            />\r\n\r\n            <StatusBar style=\"auto\" />\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles= StyleSheet.create({\r\n  container: {\r\n\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    justifyContent: 'center',\r\n    backgroundColor:'white',\r\n    alignItems: \"center\",\r\n  },\r\n  })"],"mappings":"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"},"metadata":{},"sourceType":"script"}