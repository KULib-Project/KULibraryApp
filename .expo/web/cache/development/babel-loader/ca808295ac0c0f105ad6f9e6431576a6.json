{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _reactNativeDropdownPicker = _interopRequireDefault(require(\"react-native-dropdown-picker\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\root\\\\repos\\\\summer\\\\KULibraryApp_FE\\\\screens\\\\PostScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nString.prototype.string = function (len) {\n  var s = '',\n      i = 0;\n\n  while (i++ < len) {\n    s += this;\n  }\n\n  return s;\n};\n\nString.prototype.zf = function (len) {\n  return '0'.string(len - this.length) + this;\n};\n\nNumber.prototype.zf = function (len) {\n  return this.toString().zf(len);\n};\n\nvar Post = function Post(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  (0, _react.useEffect)(function () {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n    var min = new Date().getMinutes();\n    var sec = new Date().getSeconds();\n    setDate(date + '/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec);\n  }, []);\n\n  _asyncStorage.default.getItem('User', function (error, result) {\n    console.log(result);\n    var UserInfo = JSON.parse(result);\n    setId(UserInfo);\n  });\n\n  var postUser = function postUser() {\n    _axios.default.post('https://f7479681-8640-4929-b771-f41103825403.mock.pstmn.io/post', {\n      author: id,\n      title: title,\n      text: text,\n      date: date\n    }).then(function (response) {\n      console.log('게시글 등록 완료');\n      navigation.replace('Home');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.boxOne,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.action,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    placeholder: '제목을 입력하세요',\n    style: styles.textInput,\n    autoComplete: 'off',\n    autoCapitalize: 'none',\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: [styles.action, {\n      marginTop: 10\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    placeholder: '본문 내용을 입력하세요',\n    style: [styles.textInput, {\n      height: 180\n    }],\n    autoComplete: 'off',\n    autoCapitalize: 'none',\n    multiline: true,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [styles.signIn, {\n      backgroundColor: '#FF8000'\n    }],\n    onPress: function onPress() {\n      return postUser();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [styles.textSign, {\n      color: '#fff'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))));\n};\n\nvar _default = Post;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  boxOne: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  rowWrapper: {\n    flexDirection: 'row'\n  },\n  columnWrapper: {\n    flexDirection: 'column'\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50\n  }\n});","map":{"version":3,"names":["String","prototype","string","len","s","i","zf","length","Number","toString","Post","navigation","useState","id","setId","title","setTitle","text","setText","date","setDate","useEffect","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","AsyncStorage","getItem","error","result","console","log","UserInfo","JSON","parse","postUser","axios","post","author","then","response","replace","catch","styles","boxOne","action","textInput","marginTop","height","button","signIn","backgroundColor","textSign","color","StyleSheet","create","flex","rowWrapper","flexDirection","columnWrapper","borderBottomWidth","borderBottomColor","paddingBottom","alignItems"],"sources":["D:/root/repos/summer/KULibraryApp_FE/screens/PostScreen.js"],"sourcesContent":["import React, {useState,useEffect,} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  StyleSheet,\r\n  Alert,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n  Platform,\r\n  placeholder\r\n} from 'react-native';\r\nimport axios from 'axios';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n//PostScreen의 수정 중  버전\r\nString.prototype.string = function (len) {\r\n    var s = '',\r\n      i = 0;\r\n    while (i++ < len) {\r\n      s += this;\r\n    }\r\n    return s;\r\n  };\r\n  String.prototype.zf = function (len) {\r\n    return '0'.string(len - this.length) + this;\r\n  };\r\n  Number.prototype.zf = function (len) {\r\n    return this.toString().zf(len);\r\n  };\r\n\r\n// ^ 이 부분 코드 이해하기\r\n//입력받은 문자열 관련한 코드인데 좀 더 자세히 무슨 기능을 하는지 알아볼 것\r\n\r\nconst Post = ({navigation}) => {\r\n    const [id, setId] = useState(0);\r\n    //유저 id 변수\r\n    const [title, setTitle] = useState('');\r\n    //post 제목\r\n    const [text, setText] = useState(''); \r\n    //post 내용\r\n    const [date, setDate] = useState('');\r\n    //post 날짜\r\n    useEffect(() => {\r\n        var date = new Date().getDate(); //Current Date\r\n        var month = new Date().getMonth() + 1; //Current Month\r\n        var year = new Date().getFullYear(); //Current Year\r\n        var hours = new Date().getHours(); //Current Hours\r\n        var min = new Date().getMinutes(); //Current Minutes\r\n        var sec = new Date().getSeconds(); //Current Seconds\r\n        setDate(\r\n          date + '/' + month + '/' + year \r\n          + ' ' + hours + ':' + min + ':' + sec\r\n        );\r\n      }, []); //메모리 누수 잡기\r\n      //휴대폰 저장소 동기화 아이템 가져오기\r\n      AsyncStorage.getItem('User', (error, result) => {\r\n        //로컬에서 유저 데이터 불러오는 부분 현재 작동 안함 수정 필요\r\n        console.log(result);\r\n        const UserInfo = JSON.parse(result);\r\n        setId(UserInfo);\r\n      });\r\n      const postUser = () => {\r\n        //글 post해서 db에 데이터 넘겨주는 파트\r\n        //현재 문제점, 데이터를 입력해도 null만 뜬다. 게시글 등록 완료라고는 뜨지만 등록이 안됨.\r\n        axios.post('https://f7479681-8640-4929-b771-f41103825403.mock.pstmn.io/post', {\r\n            author: id,\r\n            title: title,\r\n            text: text,\r\n            date: date,\r\n            //category: value,\r\n          })\r\n          .then(function (response) {\r\n            console.log('게시글 등록 완료');\r\n            navigation.replace('Home');\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      };\r\n\r\n    return(\r\n        <View style={styles.boxOne}>\r\n            <View style={styles.action}>\r\n                <TextInput placeholder={'제목을 입력하세요'} style={styles.textInput} autoComplete={'off'} autoCapitalize={'none'} onChangeText={text => setTitle(text)}/>\r\n            </View>\r\n            <View style={[styles.action, {marginTop: 10}]}>\r\n                <TextInput placeholder={'본문 내용을 입력하세요'} style={[styles.textInput, {height:180}]} autoComplete={'off'} autoCapitalize={'none'} multiline={true} onChangeText={text => setText(text)}/>\r\n            </View>\r\n\r\n            <View style={styles.button}>\r\n                <TouchableOpacity\r\n                    style={[\r\n                    styles.signIn,\r\n                    { backgroundColor: '#FF8000',\r\n                        }]}\r\n                    onPress={() => postUser()}>\r\n                    <Text style={[styles.textSign, {\r\n                    color:'#fff' }]}>등록하기</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n\r\nconst styles = StyleSheet.create({\r\nboxOne:{\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n},\r\nrowWrapper:{\r\n    flexDirection: 'row',\r\n},\r\ncolumnWrapper:{\r\n    flexDirection: 'column',\r\n},\r\naction: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f2f2f2',\r\n    paddingBottom: 5\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    marginTop: 50\r\n  },\r\n});\r\n\r\n// 메모리 누수 해결 참고할 코드\r\n// const [value, setValue] = useState('checking value...');\r\n// useEffect(() => {\r\n// let isMounted = true;\r\n// fetchValue().then(() => {\r\n//       if(isMounted ){\r\n//       setValue(\"done!\"); // no more error\r\n//       } \r\n//     });\r\n//    return () => {\r\n//     isMounted = false;\r\n//     };\r\n// }, []);\r\n\r\n\r\n// useEffect(() => {  \r\n//     let abortController = new AbortController();  \r\n//     // your async action is here  \r\n//     return () => {  \r\n//     abortController.abort();  \r\n//     }  \r\n//     }, []);\r\n\r\n\r\n// const [value, setValue] = useStateIfMounted('checking value...');\r\n//     useEffect(() => {\r\n//     \tfetchValue().then(() => {\r\n//           setValue(\"done!\"); // no more error\r\n//         });\r\n//     }, []);"],"mappings":"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"},"metadata":{},"sourceType":"script"}